name: Build-HashLink-Runtime

# ❶ Triggers ────────────────
on:
  push:                       # automatic trigger:
    branches: [main]          # …only on main
    paths:                    # …only if this file changed
      - ".github/hashlink_version"
  workflow_dispatch:          # manual “Run workflow” button

jobs:
  build:
    # ❷ Matrix for the three OSes
    strategy:
      matrix:
        include:
          - os: ubuntu-latest   # Linux x86-64 bottle
            triplet: linux64
          - os: windows-2022    # Win-64
            triplet: win64
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - id: vars
        shell: bash
        run: |
          echo "hashlink_version=$(cat .github/hashlink_version)" >> $GITHUB_OUTPUT

      - name: Set HL_VERSION
        id: set_version
        shell: bash
        run: |
          echo "HL_VERSION=${{ steps.vars.outputs.hashlink_version }}" >> $GITHUB_ENV
          echo "hl_version=${{ steps.vars.outputs.hashlink_version }}" >> $GITHUB_OUTPUT

      - name: Debug HL_VERSION
        shell: bash
        run: |
          echo "HL_VERSION is: $HL_VERSION"

      - name: Clone HashLink
        shell: bash
        run: |
          git clone --depth 1 --branch $HL_VERSION https://github.com/HaxeFoundation/hashlink.git external/hashlink

      # 4. Install per-OS build deps
      - name: Linux build deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install --no-install-recommends -y \
            build-essential \
            cmake \
            libmbedtls-dev \
            libopenal-dev \
            libpng-dev \
            libsdl2-dev \
            libturbojpeg-dev \
            libuv1-dev \
            libvorbis-dev \
            libsqlite3-dev \
            libglu1-mesa-dev \
            freeglut3-dev

      - name: Windows build deps
        if: runner.os == 'Windows'
        shell: bash
        run: |
          set -e
          choco install -y 7zip
          mkdir -p external/hashlink/include
          curl -fsSL --retry 3 --retry-delay 5 -o /tmp/sdl.zip https://www.libsdl.org/release/SDL2-devel-2.30.2-VC.zip
          curl -fsSL --retry 3 --retry-delay 5 -o /tmp/openal.zip https://github.com/kcat/openal-soft/releases/download/1.23.1/openal-soft-1.23.1-bin.zip
          curl -fsSL --retry 3 --retry-delay 5 -o /tmp/ffmpeg.zip https://github.com/HaxeFoundation/hashlink/files/5648056/ffmpeg-3.4.2-win64-dev.zip
          test -f /tmp/sdl.zip && 7z x /tmp/sdl.zip    -oexternal/hashlink/include && mv external/hashlink/include/SDL2*   external/hashlink/include/sdl
          test -f /tmp/openal.zip && 7z x /tmp/openal.zip -oexternal/hashlink/include && mv external/hashlink/include/openal* external/hashlink/include/openal
          test -f /tmp/ffmpeg.zip && 7z x /tmp/ffmpeg.zip -oexternal/hashlink/include && mv external/hashlink/include/ffmpeg* external/hashlink/include/ffmpeg

      - name: Setup MSBuild
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v2

      # 5. Build HashLink
      - name: Build (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          cd external/hashlink
          msbuild hl.sln /p:Configuration=Release /p:Platform=x64
      - name: Build (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          cd external/hashlink
          make -j$(nproc) all

      # 6. Package runtime (+ MIT LICENSE)
      - name: Package
        shell: bash
        run: |
          mkdir dist
          cp external/hashlink/LICENSE dist/     # keep MIT licence
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            cp external/hashlink/x64/Release/hl.exe dist/
            cp external/hashlink/x64/Release/*.dll dist/ || true
            cp external/hashlink/x64/Release/*.hdll dist/ || true
            7z a hl-$HL_VERSION-${{ matrix.triplet }}.zip dist/*
          else
            cp external/hashlink/hl dist/
            cp external/hashlink/libhl.* dist/
            cp external/hashlink/*.so dist/ || true
            cp external/hashlink/*.hdll dist/ || true
            tar -czf hl-$HL_VERSION-${{ matrix.triplet }}.tar.gz -C dist .
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: hl-${{ steps.set_version.outputs.hl_version }}-${{ matrix.triplet }}
          path: |
            hl-${{ steps.set_version.outputs.hl_version }}-${{ matrix.triplet }}.*
